{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","value","onClick","Board","squares","reducer","state","action","type","history","concat","payload","xIsNext","step","slice","Game","useReducer","Array","fill","dispatch","current","length","winner","calculateWinner","status","moves","map","move","desc","jumpTo","i","handleClick","winnerLines","isDraw","a","b","c","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa7c562c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Square(props) {\r\n  return (\r\n    <button\r\n      className={props.value ? 'btn disabled' : 'btn'}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nexport default function Board({ squares, onClick }) {\r\n  return (\r\n    <div className=\"board\">\r\n      <div>\r\n        <Square\r\n          value={squares[0]}\r\n          onClick={() => {\r\n            onClick(0);\r\n          }}\r\n        />\r\n        <Square\r\n          value={squares[1]}\r\n          onClick={() => {\r\n            onClick(1);\r\n          }}\r\n        />\r\n        <Square\r\n          value={squares[2]}\r\n          onClick={() => {\r\n            onClick(2);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Square\r\n          value={squares[3]}\r\n          onClick={() => {\r\n            onClick(3);\r\n          }}\r\n        />\r\n        <Square\r\n          value={squares[4]}\r\n          onClick={() => {\r\n            onClick(4);\r\n          }}\r\n        />\r\n        <Square\r\n          value={squares[5]}\r\n          onClick={() => {\r\n            onClick(5);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Square\r\n          value={squares[6]}\r\n          onClick={() => {\r\n            onClick(6);\r\n          }}\r\n        />\r\n        <Square\r\n          value={squares[7]}\r\n          onClick={() => {\r\n            onClick(7);\r\n          }}\r\n        />\r\n        <Square\r\n          value={squares[8]}\r\n          onClick={() => {\r\n            onClick(8);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useReducer } from 'react';\r\nimport Board from './Board';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'MOVE':\r\n      return {\r\n        ...state,\r\n        history: state.history.concat({\r\n          squares: action.payload.squares,\r\n        }),\r\n        xIsNext: !state.xIsNext,\r\n      };\r\n    case 'JUMP':\r\n      return {\r\n        ...state,\r\n        xIsNext: action.payload.step % 2 === 0,\r\n        history: state.history.slice(0, action.payload.step + 1),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function Game() {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    xIsNext: true,\r\n    history: [{ squares: Array(9).fill(null) }],\r\n  });\r\n  const { xIsNext, history } = state;\r\n\r\n  const jumpTo = (step) => {\r\n    dispatch({ type: 'JUMP', payload: { step } });\r\n  };\r\n\r\n  const handleClick = (i) => {\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const winner = calculateWinner(squares);\r\n    if (winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = xIsNext ? 'X' : 'O';\r\n    dispatch({ type: 'MOVE', payload: { squares } });\r\n  };\r\n\r\n  const current = history[history.length - 1];\r\n  const winner = calculateWinner(current.squares);\r\n\r\n  const status = winner\r\n    ? winner === 'D'\r\n      ? 'Draw'\r\n      : 'Winner is ' + winner\r\n    : 'Next Player is ' + (xIsNext ? 'X' : 'O');\r\n\r\n  const moves = history.map((step, move) => {\r\n    const desc = move ? 'Go to #' + move : 'Start the game';\r\n    return (\r\n      <li key={move}>\r\n        <button onClick={() => jumpTo(move)}>{desc}</button>\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <div className={winner ? 'game disabled' : 'game'}>\r\n      <div className=\"game-board\">\r\n        <Board onClick={(i) => handleClick(i)} squares={current.squares} />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div>{status}</div>\r\n        <ul>{moves}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n  const winnerLines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  let isDraw = true;\r\n  for (let i = 0; i < winnerLines.length; i++) {\r\n    const [a, b, c] = winnerLines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n    if (!squares[a] || !squares[b] || !squares[c]) {\r\n      isDraw = false;\r\n    }\r\n  }\r\n  if (isDraw) return 'D';\r\n  return null;\r\n};\r\n","import './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}